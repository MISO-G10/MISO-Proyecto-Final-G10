name: Despliegue Aplicación Web

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # Usar las variables definidas a nivel de repositorio o de organización
    env:
      API_URL: ${{ vars.API_URL }}
      ENDPOINT_USERS: ${{ vars.ENDPOINT_USERS }}
      ENDPOINT_FABRICANTES: ${{ vars.ENDPOINT_FABRICANTES }}
      ENDPOINT_VENTAS: ${{ vars.ENDPOINT_VENTAS }}
      ENDPOINT_INVENTARIO: ${{ vars.ENDPOINT_INVENTARIO }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

     

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Configure environment variables
        run: |
          # Se configuran las variables de entorno con base en las variables de GitHub
          sed -i 's|__API_URL__|'"$API_URL"'|g' WebApp/src/environment/environment.prod.ts
          sed -i 's|__ENDPOINT_USERS__|'"$ENDPOINT_USERS"'|g' WebApp/src/environment/environment.prod.ts
          sed -i 's|__ENDPOINT_FABRICANTES__|'"$ENDPOINT_FABRICANTES"'|g' WebApp/src/environment/environment.prod.ts
          sed -i 's|__ENDPOINT_VENTAS__|'"$ENDPOINT_VENTAS"'|g' WebApp/src/environment/environment.prod.ts
          sed -i 's|__ENDPOINT_INVENTARIO__|'"$ENDPOINT_INVENTARIO"'|g' WebApp/src/environment/environment.prod.ts
          
          echo "Preview environment.prod.ts:"
          cat WebApp/src/environment/environment.prod.ts

      - name: Install dependencies
        working-directory: WebApp
        run: npm ci

      - name: Build Angular app
        working-directory: WebApp
        run: npm run build -- --configuration production

      - name: Debug SSH Connection
        run: |
          echo "Configurando SSH para depuración..."
          mkdir -p ~/.ssh
          echo "${{ secrets.GCE_SSH_KEY_FRONT }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          echo "Generando clave pública a partir de la clave privada..."
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
          
          echo "Clave pública derivada (vs authorized_keys):"
          cat ~/.ssh/id_rsa.pub
          
          echo "Verificando formato de la clave privada (primeras líneas):"
          head -n 2 ~/.ssh/id_rsa
          
          echo "Intentando conexión SSH con verbosidad:"
          ssh -v -o StrictHostKeyChecking=no -o BatchMode=yes -o ConnectTimeout=10 ${{ secrets.GCE_USER_FRONT_WEB }}@${{ secrets.GCE_HOST_FRONT_WEB }} "echo Conexión exitosa"

      - name: Deploy to production server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.GCE_HOST_FRONT_WEB }}
          username: ${{ secrets.GCE_USER_FRONT_WEB }}
          key: ${{ secrets.GCE_SSH_KEY_FRONT }}
          port: 22
          source: "WebApp/dist/web-app/*"
          target: "/var/www/html/"
          strip_components: 0
          debug: true

      - name: Restart Nginx
        run: |
          # Reiniciar nginx
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USER_FRONT_WEB }}@${{ secrets.GCE_HOST_FRONT_WEB }} "sudo systemctl restart nginx && echo 'Despliegue completado con éxito.'"